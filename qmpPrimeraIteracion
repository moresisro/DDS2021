***_QMP1_***
*** Aclaraciones ***

-Los tipos de prenda y las categorias las puse como enums ya que no creo que tengan ningún comportamiento 
asociado como para que sean clases o interfaces. También creo que la forma en la que se crea una prenda
debe estar limitada por algún patrón creacional que permita su correcta creación.
-No estoy segura del patrón que elegí, tanto por su implementación como por la efectividad del mismo. Las prendas y los atuendos (aunque particularmente las prendas) son objetos complejos constituidos por las mismas partes que tienen condiciones o limitaciones entre las mismas (como es el caso de tipoDePrenda - categoria). Según entendí del apunte, el patrón Builder se utiliza principalmente para permitir diferentes representaciones de un objeto complejo. En este caso, las diferentes representaciones serían los diferentes tipos de prendas y atuendos.

public enum TipoDePrenda {
	REMERA, CAMISA, PANTALON, ZAPATOS;
}

public enum Categoria {
	PARTESUPERIOR, CALZADO, PARTEINFERIOR, ACCESORIOS;
}

public enum Material {
	ALGODON, POLYESTER, LINO, CUERO;
}

public enum Color {
	NEGRO, BLANCO, GRIS, BEIGE, AZUL;
}


Atuendo Builder {
	*preferencias
	*clima

	public abstract void definirParteSuperior();
	public abstract void definirParteInferior();
	public abstract void definirCalzado();
	public abstract void definirAccesorios();
}

Prenda Builder {
	public abstract void definirTipoDePrenda();
	public abstract void definirCategoriaSegun(TipoDePrenda tipo);
	public abstract void definirMaterial();
	public abstract void definirColorPrincipal();
	public abstract void definirColorSecundario();
}

Atuendo
	-parteSuperior
	-parteInferior
	-calzado
	-accesorios

Prenda 
	-Tipo de prenda*: zapatos, camisa, pantalón
	-Categoría*: parte superior, calzado, parte inferior, accesorios
	-Material*
	-Color principal*
	-Color secundario

